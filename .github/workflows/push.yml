name: manage pushes

on:
  push:
    branches: [ master ]

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: install required packages
        run: sudo apt-get update && sudo apt-get install -y libpci-dev libvulkan-dev libwayland-dev libxrandr-dev libxcb-randr0-dev libdconf-dev libdbus-1-dev libmagickcore-dev libxfconf-0-dev libsqlite3-dev rpm librpm-dev libzstd-dev libegl-dev libglx-dev libosmesa6-dev ocl-icd-opencl-dev

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: c

      - name: configure project
        run: cmake -DSET_TWEAK=Off -DBUILD_TESTS=On -DCMAKE_INSTALL_PREFIX=/usr .

      - name: build project
        run: cmake --build . -j$(nproc) --target package

      - name: perform CodeQL analysis
        uses: github/codeql-action/analyze@v2

      - name: run fastfetch
        run: ./fastfetch --recache --disable-linewrap false --hide-cursor false --show-errors true

      - name: run flashfetch
        run: ./flashfetch

      - name: run tests
        run: ctest

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: fastfetch-linux
          path: ./fastfetch-*.*

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: fastfetch
          path: ./fastfetch

  macos:
    name: MacOS
    runs-on: macos-latest
    permissions:
      security-events: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: install required packages
        run: brew install vulkan-loader

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: c

      - name: configure project
        run: cmake -DSET_TWEAK=Off -DBUILD_TESTS=On .

      - name: build project
        run: cmake --build . -j$(sysctl -n hw.logicalcpu) --target package

      - name: perform CodeQL analysis
        uses: github/codeql-action/analyze@v2

      - name: run fastfetch
        run: ./fastfetch --recache --disable-linewrap false --hide-cursor false --show-errors true

      - name: run flashfetch
        run: ./flashfetch

      - name: run tests
        run: ctest

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: fastfetch-macos
          path: ./fastfetch-*.*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - linux
      - macos
    permissions:
      contents: write
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v3

      - name: get fastfetch version
        id: get_version_fastfetch
        run: echo "::set-output name=release::$(fastfetch/fastfetch --version-raw)"

      - name: get latest release version
        id: get_version_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}

      - name: create release
        if: steps.get_version_fastfetch.outputs.release != steps.get_version_release.outputs.release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_version_fastfetch.outputs.release }}
          commit: ${{ github.sha }}
          artifactErrorsFailBuild: true
          artifacts: fastfetch-linux/*,fastfetch-macos/*
